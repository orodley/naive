ADD r/m8, r8           =         00 /r
ADD r/m32, imm32       =         81 /0 id
ADD r/m32, r32         =         01 /r
ADD r/m64, imm8        = REX.W + 83 /0 ib
ADD r/m64, imm32       = REX.W + 81 /0 id
ADD r/m64, r64         = REX.W + 01 /r

ADDSS xmm1, xmm2/m32   =         [F3 0F 58] /r
ADDSD xmm1, xmm2/m32   =         [F2 0F 58] /r

AND r/m32, r32         =         21 /r
AND r/m32, imm8        =         83 /4 ib
AND r/m32, imm32       =         81 /4 id
AND r/m64, imm8        = REX.W + 83 /4 ib
AND r/m64, imm32       = REX.W + 81 /4 id
AND r/m64, r64         = REX.W + 21 /r

CALL rel               =         E8 cd
CALL r/m64             =         FF /2

CDQ                    =         99
CQO                    = REX.W + 99

CMP r/m8, r8           =         38 /r
CMP r/m8, imm8         =         80 /7 ib
CMP r/m16, r16         =   OSO + 39 /r
CMP r/m32, imm32       =         81 /7 id
CMP r/m32, r32         =         39 /r
CMP r/m64, imm32       = REX.W + 81 /7 id
CMP r/m64, r64         = REX.W + 39 /r

CVTSI2SS xmm1 r/m32    =         [F3 0F 2A] /r
CVTSI2SD xmm1 r/m32    =         [F2 0F 2A] /r 
CVTSS2SI r32, xmm1/m32 =         [F3 0F 2D] /r
CVTSD2SI r32, xmm1/m32 =         [F2 0F 2D] /r

IMUL r32, r/m32        =         [0F AF] /r
IMUL r32, r/m32, imm32 =         69 /r id
IMUL r64, r/m64        = REX.W + [0F AF] /r
IMUL r64, r/m64, imm32 = REX.W + 69 /r id

IDIV r/m32             =         F7 /7
IDIV r/m64             = REX.W + F7 /7

JE  rel                =         [0F 84] cd
JNE rel                =         [0F 85] cd
JG  rel                =         [0F 8F] cd
JGE rel                =         [0F 8D] cd
JL  rel                =         [0F 8C] cd
JLE rel                =         [0F 8E] cd
JA  rel                =         [0F 87] cd
JAE rel                =         [0F 83] cd
JB  rel                =         [0F 82] cd
JBE rel                =         [0F 86] cd

JMP rel                =         E9 cd

MOV r/m8, r8           =         88 /r
MOV r8, r/m8           =         8A /r
MOV r/m8, imm8         =         C6 /0 ib
MOV r8, imm8           =         B0 +rb ib
MOV r/m16, r16         =   OSO + 89 /r
MOV r16, r/m16         =   OSO + 8B /r
MOV r/m16, imm16       =   OSO + C7 /0 iw
MOV r/m32, r32         =         89 /r
MOV r32, r/m32         =         8B /r
MOV r/m32, imm32       =         C7 /0 id
MOV r/m64, r64         = REX.W + 89 /r
MOV r64,   r/m64       = REX.W + 8B /r
MOV r/m64, imm32       = REX.W + C7 /0 id
MOV r64,   imm64       = REX.W + B8 +rd io

MOVSX r16, r/m8        =   OSO + [0F BE] /r
MOVSX r32, r/m8        =         [0F BE] /r
MOVSX r64, r/m8        = REX.W + [0F BE] /r
MOVSX r64, r/m32       = REX.W + 63 /r

MOVZX r32, r/m8        =         [0F B6] /r
MOVZX r32, r/m16       =         [0F B7] /r
MOVZX r64, r/m8        = REX.W + [0F B6] /r
MOVZX r64, r/m16       = REX.W + [0F B7] /r

MOVSS xmm1, xmm2/m32   =         [F3 0F 10] /r
MOVSS xmm2/m32, xmm1   =         [F3 0F 11] /r
MOVSD xmm1, xmm2/m64   =         [F2 0F 10] /r
MOVSD xmm1/m64, xmm2   =         [F2 0F 11] /r

MOVAPS xmm1, xmm2/m128 =         [0F 28] /r
MOVAPS xmm2/m128, xmm1 =         [0F 29] /r

NEG r/m32              =         F7 /3
NEG r/m64              = REX.W + F7 /3

NOP                    =         90

NOT r/m32              =         F7 /2
NOT r/m64              = REX.W + F7 /2

OR r/m32, imm8         =         83 /1 ib
OR r/m32, r32          =         09 /r
OR r/m64, imm8         = REX.W + 83 /1 ib
OR r/m64, r64          = REX.W + 09 /r

POP r64                =         58 +rd

PUSH r64               =         50 +rd

RET                    =         C3

SETE  r/m8             =         [0F 94] /0
SETNE r/m8             =         [0F 95] /0
SETG  r/m8             =         [0F 9F] /0
SETGE r/m8             =         [0F 9D] /0
SETL  r/m8             =         [0F 9C] /0
SETLE r/m8             =         [0F 9E] /0
SETA  r/m8             =         [0F 97] /0
SETAE r/m8             =         [0F 93] /0
SETB  r/m8             =         [0F 92] /0
SETBE r/m8             =         [0F 96] /0

SHL r/m32, imm8        =         C1 /4 ib
SHL r/m32, CL          =         D3 /4
SHL r/m64, imm8        = REX.W + C1 /4 ib
SHL r/m64, CL          = REX.W + D3 /4

SHR r/m32, imm8        =         C1 /5 ib
SHR r/m32, CL          =         D3 /5
SHR r/m64, imm8        = REX.W + C1 /5 ib
SHR r/m64, CL          = REX.W + D3 /5

SUB r/m32, r32         =         29 /r
SUB r/m32, imm8        =         83 /5 ib
SUB r/m64, r64         = REX.W + 29 /r
SUB r/m64, imm8        = REX.W + 83 /5 ib
SUB r/m64, imm32       = REX.W + 81 /5 id

SYSCALL                =         [0F 05]

TEST r/m8, r8          =         84 /r
TEST r/m32, r32        =         85 /r

XOR r/m8, r8           =         30 /r
XOR r/m32, r32         =         31 /r
XOR r/m64, r64         = REX.W + 31 /r
